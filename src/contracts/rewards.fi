storage map[nat => address] tokenowners;
storage map[nat=>string]    uri;
storage map[address => nat] balances;
storage nat tokens;
storage address _owner;




entry mint(string _data,address _owner){

    storage.tokens.add(nat 1);
    storage.uri.push(nat 3,string input._data);
    let nat b= get(storage.balances, input._owner);
    let nat b1 =add( b,nat 1);
    storage.balances.push(address input._owner,  b1);
    storage.tokenowners.push( storage.tokens, input._owner);
    
}

entry tranferFrom(address _receiver,nat ID){

    let address tokenHolder= get(storage.tokenowners,input.ID);
    if(SENDER !=tokenHolder){
        throw(string "sender does not own token");
    }
    let nat  b=storage.balances.get(SENDER);
    b=to_nat(sub(b,nat 1));
  

    
    storage.balances.push(SENDER,b);
    storage.balances.push(SENDER,add(storage.balances.get(input._receiver),nat 1));
}
